// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSeeGroupScheduleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout seeGroupAddScheduleLayout;

  @NonNull
  public final TextView seeGroupCloseTv;

  @NonNull
  public final TextView seeGroupDateTv;

  @NonNull
  public final RecyclerView seeGroupGroupScheduleRv;

  @NonNull
  public final TextView seeGroupGroupScheduleTv;

  @NonNull
  public final RecyclerView seeGroupPersonScheduleRv;

  @NonNull
  public final TextView seeGroupPersonScheduleTv;

  private FragmentSeeGroupScheduleBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout seeGroupAddScheduleLayout, @NonNull TextView seeGroupCloseTv,
      @NonNull TextView seeGroupDateTv, @NonNull RecyclerView seeGroupGroupScheduleRv,
      @NonNull TextView seeGroupGroupScheduleTv, @NonNull RecyclerView seeGroupPersonScheduleRv,
      @NonNull TextView seeGroupPersonScheduleTv) {
    this.rootView = rootView;
    this.seeGroupAddScheduleLayout = seeGroupAddScheduleLayout;
    this.seeGroupCloseTv = seeGroupCloseTv;
    this.seeGroupDateTv = seeGroupDateTv;
    this.seeGroupGroupScheduleRv = seeGroupGroupScheduleRv;
    this.seeGroupGroupScheduleTv = seeGroupGroupScheduleTv;
    this.seeGroupPersonScheduleRv = seeGroupPersonScheduleRv;
    this.seeGroupPersonScheduleTv = seeGroupPersonScheduleTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSeeGroupScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSeeGroupScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_see_group_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSeeGroupScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.see_group_add_schedule_layout;
      LinearLayout seeGroupAddScheduleLayout = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupAddScheduleLayout == null) {
        break missingId;
      }

      id = R.id.see_group_close_tv;
      TextView seeGroupCloseTv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupCloseTv == null) {
        break missingId;
      }

      id = R.id.see_group_date_tv;
      TextView seeGroupDateTv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupDateTv == null) {
        break missingId;
      }

      id = R.id.see_group_group_schedule_rv;
      RecyclerView seeGroupGroupScheduleRv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupGroupScheduleRv == null) {
        break missingId;
      }

      id = R.id.see_group_group_schedule_tv;
      TextView seeGroupGroupScheduleTv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupGroupScheduleTv == null) {
        break missingId;
      }

      id = R.id.see_group_person_schedule_rv;
      RecyclerView seeGroupPersonScheduleRv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupPersonScheduleRv == null) {
        break missingId;
      }

      id = R.id.see_group_person_schedule_tv;
      TextView seeGroupPersonScheduleTv = ViewBindings.findChildViewById(rootView, id);
      if (seeGroupPersonScheduleTv == null) {
        break missingId;
      }

      return new FragmentSeeGroupScheduleBinding((ConstraintLayout) rootView,
          seeGroupAddScheduleLayout, seeGroupCloseTv, seeGroupDateTv, seeGroupGroupScheduleRv,
          seeGroupGroupScheduleTv, seeGroupPersonScheduleRv, seeGroupPersonScheduleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

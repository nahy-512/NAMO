// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewGroupScheduleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView newGroupAlarmContentTv;

  @NonNull
  public final ImageView newGroupAlarmIv;

  @NonNull
  public final ConstraintLayout newGroupAlarmLayout;

  @NonNull
  public final TextView newGroupAlarmTv;

  @NonNull
  public final LinearLayout newGroupChooseLinearLayout;

  @NonNull
  public final TextView newGroupCloseTv;

  @NonNull
  public final DatePicker newGroupDatepickerDp;

  @NonNull
  public final View newGroupEndBarView;

  @NonNull
  public final ImageView newGroupEndDateBg;

  @NonNull
  public final TextView newGroupEndDateTv;

  @NonNull
  public final ConstraintLayout newGroupEndLayout;

  @NonNull
  public final ImageView newGroupEndTimeBg;

  @NonNull
  public final TextView newGroupEndTimeTv;

  @NonNull
  public final TimePicker newGroupEndTimepickerTp;

  @NonNull
  public final TextView newGroupEndTv;

  @NonNull
  public final Button newGroupMapOpenKakaomapBtn;

  @NonNull
  public final RelativeLayout newGroupMapView;

  @NonNull
  public final TextView newGroupNewTv;

  @NonNull
  public final TextView newGroupPersonContentTv;

  @NonNull
  public final ImageView newGroupPersonIv;

  @NonNull
  public final ConstraintLayout newGroupPersonLayout;

  @NonNull
  public final TextView newGroupPersonTv;

  @NonNull
  public final TextView newGroupPlaceContentTv;

  @NonNull
  public final ImageView newGroupPlaceIv;

  @NonNull
  public final ConstraintLayout newGroupPlaceLayout;

  @NonNull
  public final TextView newGroupPlaceTv;

  @NonNull
  public final TextView newGroupSaveTv;

  @NonNull
  public final View newGroupStartBarView;

  @NonNull
  public final ImageView newGroupStartDateBg;

  @NonNull
  public final TextView newGroupStartDateTv;

  @NonNull
  public final ConstraintLayout newGroupStartLayout;

  @NonNull
  public final ImageView newGroupStartTimeBg;

  @NonNull
  public final TextView newGroupStartTimeTv;

  @NonNull
  public final TimePicker newGroupStartTimepickerTp;

  @NonNull
  public final TextView newGroupStartTv;

  @NonNull
  public final EditText newGroupTitleEt;

  private FragmentNewGroupScheduleBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView newGroupAlarmContentTv, @NonNull ImageView newGroupAlarmIv,
      @NonNull ConstraintLayout newGroupAlarmLayout, @NonNull TextView newGroupAlarmTv,
      @NonNull LinearLayout newGroupChooseLinearLayout, @NonNull TextView newGroupCloseTv,
      @NonNull DatePicker newGroupDatepickerDp, @NonNull View newGroupEndBarView,
      @NonNull ImageView newGroupEndDateBg, @NonNull TextView newGroupEndDateTv,
      @NonNull ConstraintLayout newGroupEndLayout, @NonNull ImageView newGroupEndTimeBg,
      @NonNull TextView newGroupEndTimeTv, @NonNull TimePicker newGroupEndTimepickerTp,
      @NonNull TextView newGroupEndTv, @NonNull Button newGroupMapOpenKakaomapBtn,
      @NonNull RelativeLayout newGroupMapView, @NonNull TextView newGroupNewTv,
      @NonNull TextView newGroupPersonContentTv, @NonNull ImageView newGroupPersonIv,
      @NonNull ConstraintLayout newGroupPersonLayout, @NonNull TextView newGroupPersonTv,
      @NonNull TextView newGroupPlaceContentTv, @NonNull ImageView newGroupPlaceIv,
      @NonNull ConstraintLayout newGroupPlaceLayout, @NonNull TextView newGroupPlaceTv,
      @NonNull TextView newGroupSaveTv, @NonNull View newGroupStartBarView,
      @NonNull ImageView newGroupStartDateBg, @NonNull TextView newGroupStartDateTv,
      @NonNull ConstraintLayout newGroupStartLayout, @NonNull ImageView newGroupStartTimeBg,
      @NonNull TextView newGroupStartTimeTv, @NonNull TimePicker newGroupStartTimepickerTp,
      @NonNull TextView newGroupStartTv, @NonNull EditText newGroupTitleEt) {
    this.rootView = rootView;
    this.newGroupAlarmContentTv = newGroupAlarmContentTv;
    this.newGroupAlarmIv = newGroupAlarmIv;
    this.newGroupAlarmLayout = newGroupAlarmLayout;
    this.newGroupAlarmTv = newGroupAlarmTv;
    this.newGroupChooseLinearLayout = newGroupChooseLinearLayout;
    this.newGroupCloseTv = newGroupCloseTv;
    this.newGroupDatepickerDp = newGroupDatepickerDp;
    this.newGroupEndBarView = newGroupEndBarView;
    this.newGroupEndDateBg = newGroupEndDateBg;
    this.newGroupEndDateTv = newGroupEndDateTv;
    this.newGroupEndLayout = newGroupEndLayout;
    this.newGroupEndTimeBg = newGroupEndTimeBg;
    this.newGroupEndTimeTv = newGroupEndTimeTv;
    this.newGroupEndTimepickerTp = newGroupEndTimepickerTp;
    this.newGroupEndTv = newGroupEndTv;
    this.newGroupMapOpenKakaomapBtn = newGroupMapOpenKakaomapBtn;
    this.newGroupMapView = newGroupMapView;
    this.newGroupNewTv = newGroupNewTv;
    this.newGroupPersonContentTv = newGroupPersonContentTv;
    this.newGroupPersonIv = newGroupPersonIv;
    this.newGroupPersonLayout = newGroupPersonLayout;
    this.newGroupPersonTv = newGroupPersonTv;
    this.newGroupPlaceContentTv = newGroupPlaceContentTv;
    this.newGroupPlaceIv = newGroupPlaceIv;
    this.newGroupPlaceLayout = newGroupPlaceLayout;
    this.newGroupPlaceTv = newGroupPlaceTv;
    this.newGroupSaveTv = newGroupSaveTv;
    this.newGroupStartBarView = newGroupStartBarView;
    this.newGroupStartDateBg = newGroupStartDateBg;
    this.newGroupStartDateTv = newGroupStartDateTv;
    this.newGroupStartLayout = newGroupStartLayout;
    this.newGroupStartTimeBg = newGroupStartTimeBg;
    this.newGroupStartTimeTv = newGroupStartTimeTv;
    this.newGroupStartTimepickerTp = newGroupStartTimepickerTp;
    this.newGroupStartTv = newGroupStartTv;
    this.newGroupTitleEt = newGroupTitleEt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewGroupScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewGroupScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_group_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewGroupScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.new_group_alarm_content_tv;
      TextView newGroupAlarmContentTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupAlarmContentTv == null) {
        break missingId;
      }

      id = R.id.new_group_alarm_iv;
      ImageView newGroupAlarmIv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupAlarmIv == null) {
        break missingId;
      }

      id = R.id.new_group_alarm_layout;
      ConstraintLayout newGroupAlarmLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupAlarmLayout == null) {
        break missingId;
      }

      id = R.id.new_group_alarm_tv;
      TextView newGroupAlarmTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupAlarmTv == null) {
        break missingId;
      }

      id = R.id.new_group_choose_linear_layout;
      LinearLayout newGroupChooseLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupChooseLinearLayout == null) {
        break missingId;
      }

      id = R.id.new_group_close_tv;
      TextView newGroupCloseTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupCloseTv == null) {
        break missingId;
      }

      id = R.id.new_group_datepicker_dp;
      DatePicker newGroupDatepickerDp = ViewBindings.findChildViewById(rootView, id);
      if (newGroupDatepickerDp == null) {
        break missingId;
      }

      id = R.id.new_group_end_bar_view;
      View newGroupEndBarView = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndBarView == null) {
        break missingId;
      }

      id = R.id.new_group_end_date_bg;
      ImageView newGroupEndDateBg = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndDateBg == null) {
        break missingId;
      }

      id = R.id.new_group_end_date_tv;
      TextView newGroupEndDateTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndDateTv == null) {
        break missingId;
      }

      id = R.id.new_group_end_layout;
      ConstraintLayout newGroupEndLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndLayout == null) {
        break missingId;
      }

      id = R.id.new_group_end_time_bg;
      ImageView newGroupEndTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndTimeBg == null) {
        break missingId;
      }

      id = R.id.new_group_end_time_tv;
      TextView newGroupEndTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndTimeTv == null) {
        break missingId;
      }

      id = R.id.new_group_end_timepicker_tp;
      TimePicker newGroupEndTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndTimepickerTp == null) {
        break missingId;
      }

      id = R.id.new_group_end_tv;
      TextView newGroupEndTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupEndTv == null) {
        break missingId;
      }

      id = R.id.new_group_map_open_kakaomap_btn;
      Button newGroupMapOpenKakaomapBtn = ViewBindings.findChildViewById(rootView, id);
      if (newGroupMapOpenKakaomapBtn == null) {
        break missingId;
      }

      id = R.id.new_group_map_view;
      RelativeLayout newGroupMapView = ViewBindings.findChildViewById(rootView, id);
      if (newGroupMapView == null) {
        break missingId;
      }

      id = R.id.new_group_new_tv;
      TextView newGroupNewTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupNewTv == null) {
        break missingId;
      }

      id = R.id.new_group_person_content_tv;
      TextView newGroupPersonContentTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPersonContentTv == null) {
        break missingId;
      }

      id = R.id.new_group_person_iv;
      ImageView newGroupPersonIv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPersonIv == null) {
        break missingId;
      }

      id = R.id.new_group_person_layout;
      ConstraintLayout newGroupPersonLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPersonLayout == null) {
        break missingId;
      }

      id = R.id.new_group_person_tv;
      TextView newGroupPersonTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPersonTv == null) {
        break missingId;
      }

      id = R.id.new_group_place_content_tv;
      TextView newGroupPlaceContentTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPlaceContentTv == null) {
        break missingId;
      }

      id = R.id.new_group_place_iv;
      ImageView newGroupPlaceIv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPlaceIv == null) {
        break missingId;
      }

      id = R.id.new_group_place_layout;
      ConstraintLayout newGroupPlaceLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPlaceLayout == null) {
        break missingId;
      }

      id = R.id.new_group_place_tv;
      TextView newGroupPlaceTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupPlaceTv == null) {
        break missingId;
      }

      id = R.id.new_group_save_tv;
      TextView newGroupSaveTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupSaveTv == null) {
        break missingId;
      }

      id = R.id.new_group_start_bar_view;
      View newGroupStartBarView = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartBarView == null) {
        break missingId;
      }

      id = R.id.new_group_start_date_bg;
      ImageView newGroupStartDateBg = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartDateBg == null) {
        break missingId;
      }

      id = R.id.new_group_start_date_tv;
      TextView newGroupStartDateTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartDateTv == null) {
        break missingId;
      }

      id = R.id.new_group_start_layout;
      ConstraintLayout newGroupStartLayout = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartLayout == null) {
        break missingId;
      }

      id = R.id.new_group_start_time_bg;
      ImageView newGroupStartTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartTimeBg == null) {
        break missingId;
      }

      id = R.id.new_group_start_time_tv;
      TextView newGroupStartTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartTimeTv == null) {
        break missingId;
      }

      id = R.id.new_group_start_timepicker_tp;
      TimePicker newGroupStartTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartTimepickerTp == null) {
        break missingId;
      }

      id = R.id.new_group_start_tv;
      TextView newGroupStartTv = ViewBindings.findChildViewById(rootView, id);
      if (newGroupStartTv == null) {
        break missingId;
      }

      id = R.id.new_group_title_et;
      EditText newGroupTitleEt = ViewBindings.findChildViewById(rootView, id);
      if (newGroupTitleEt == null) {
        break missingId;
      }

      return new FragmentNewGroupScheduleBinding((ConstraintLayout) rootView,
          newGroupAlarmContentTv, newGroupAlarmIv, newGroupAlarmLayout, newGroupAlarmTv,
          newGroupChooseLinearLayout, newGroupCloseTv, newGroupDatepickerDp, newGroupEndBarView,
          newGroupEndDateBg, newGroupEndDateTv, newGroupEndLayout, newGroupEndTimeBg,
          newGroupEndTimeTv, newGroupEndTimepickerTp, newGroupEndTv, newGroupMapOpenKakaomapBtn,
          newGroupMapView, newGroupNewTv, newGroupPersonContentTv, newGroupPersonIv,
          newGroupPersonLayout, newGroupPersonTv, newGroupPlaceContentTv, newGroupPlaceIv,
          newGroupPlaceLayout, newGroupPlaceTv, newGroupSaveTv, newGroupStartBarView,
          newGroupStartDateBg, newGroupStartDateTv, newGroupStartLayout, newGroupStartTimeBg,
          newGroupStartTimeTv, newGroupStartTimepickerTp, newGroupStartTv, newGroupTitleEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

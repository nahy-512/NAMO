// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewScheduleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addAlarmContentTv;

  @NonNull
  public final ImageView addAlarmIv;

  @NonNull
  public final ConstraintLayout addAlarmLayout;

  @NonNull
  public final TextView addAlarmTv;

  @NonNull
  public final CardView addCategoryContentColorCv;

  @NonNull
  public final LinearLayout addCategoryContentLayout;

  @NonNull
  public final TextView addCategoryContentNameTv;

  @NonNull
  public final ImageView addCategoryIv;

  @NonNull
  public final ConstraintLayout addCategoryLayout;

  @NonNull
  public final TextView addCategoryTv;

  @NonNull
  public final LinearLayout addChooseLinearLayout;

  @NonNull
  public final TextView addCloseTv;

  @NonNull
  public final DatePicker addDatepickerDp;

  @NonNull
  public final View addEndBarView;

  @NonNull
  public final ImageView addEndDateBg;

  @NonNull
  public final TextView addEndDateTv;

  @NonNull
  public final ConstraintLayout addEndLayout;

  @NonNull
  public final ImageView addEndTimeBg;

  @NonNull
  public final TextView addEndTimeTv;

  @NonNull
  public final TimePicker addEndTimepickerTp;

  @NonNull
  public final TextView addEndTv;

  @NonNull
  public final Button addMapOpenKakaomapBtn;

  @NonNull
  public final RelativeLayout addMapView;

  @NonNull
  public final TextView addNewTv;

  @NonNull
  public final TextView addPlaceContentTv;

  @NonNull
  public final ImageView addPlaceIv;

  @NonNull
  public final ConstraintLayout addPlaceLayout;

  @NonNull
  public final TextView addPlaceTv;

  @NonNull
  public final TextView addSaveTv;

  @NonNull
  public final View addStartBarView;

  @NonNull
  public final ImageView addStartDateBg;

  @NonNull
  public final TextView addStartDateTv;

  @NonNull
  public final ConstraintLayout addStartLayout;

  @NonNull
  public final ImageView addStartTimeBg;

  @NonNull
  public final TextView addStartTimeTv;

  @NonNull
  public final TimePicker addStartTimepickerTp;

  @NonNull
  public final TextView addStartTv;

  @NonNull
  public final EditText addTitleEt;

  private FragmentNewScheduleBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView addAlarmContentTv, @NonNull ImageView addAlarmIv,
      @NonNull ConstraintLayout addAlarmLayout, @NonNull TextView addAlarmTv,
      @NonNull CardView addCategoryContentColorCv, @NonNull LinearLayout addCategoryContentLayout,
      @NonNull TextView addCategoryContentNameTv, @NonNull ImageView addCategoryIv,
      @NonNull ConstraintLayout addCategoryLayout, @NonNull TextView addCategoryTv,
      @NonNull LinearLayout addChooseLinearLayout, @NonNull TextView addCloseTv,
      @NonNull DatePicker addDatepickerDp, @NonNull View addEndBarView,
      @NonNull ImageView addEndDateBg, @NonNull TextView addEndDateTv,
      @NonNull ConstraintLayout addEndLayout, @NonNull ImageView addEndTimeBg,
      @NonNull TextView addEndTimeTv, @NonNull TimePicker addEndTimepickerTp,
      @NonNull TextView addEndTv, @NonNull Button addMapOpenKakaomapBtn,
      @NonNull RelativeLayout addMapView, @NonNull TextView addNewTv,
      @NonNull TextView addPlaceContentTv, @NonNull ImageView addPlaceIv,
      @NonNull ConstraintLayout addPlaceLayout, @NonNull TextView addPlaceTv,
      @NonNull TextView addSaveTv, @NonNull View addStartBarView, @NonNull ImageView addStartDateBg,
      @NonNull TextView addStartDateTv, @NonNull ConstraintLayout addStartLayout,
      @NonNull ImageView addStartTimeBg, @NonNull TextView addStartTimeTv,
      @NonNull TimePicker addStartTimepickerTp, @NonNull TextView addStartTv,
      @NonNull EditText addTitleEt) {
    this.rootView = rootView;
    this.addAlarmContentTv = addAlarmContentTv;
    this.addAlarmIv = addAlarmIv;
    this.addAlarmLayout = addAlarmLayout;
    this.addAlarmTv = addAlarmTv;
    this.addCategoryContentColorCv = addCategoryContentColorCv;
    this.addCategoryContentLayout = addCategoryContentLayout;
    this.addCategoryContentNameTv = addCategoryContentNameTv;
    this.addCategoryIv = addCategoryIv;
    this.addCategoryLayout = addCategoryLayout;
    this.addCategoryTv = addCategoryTv;
    this.addChooseLinearLayout = addChooseLinearLayout;
    this.addCloseTv = addCloseTv;
    this.addDatepickerDp = addDatepickerDp;
    this.addEndBarView = addEndBarView;
    this.addEndDateBg = addEndDateBg;
    this.addEndDateTv = addEndDateTv;
    this.addEndLayout = addEndLayout;
    this.addEndTimeBg = addEndTimeBg;
    this.addEndTimeTv = addEndTimeTv;
    this.addEndTimepickerTp = addEndTimepickerTp;
    this.addEndTv = addEndTv;
    this.addMapOpenKakaomapBtn = addMapOpenKakaomapBtn;
    this.addMapView = addMapView;
    this.addNewTv = addNewTv;
    this.addPlaceContentTv = addPlaceContentTv;
    this.addPlaceIv = addPlaceIv;
    this.addPlaceLayout = addPlaceLayout;
    this.addPlaceTv = addPlaceTv;
    this.addSaveTv = addSaveTv;
    this.addStartBarView = addStartBarView;
    this.addStartDateBg = addStartDateBg;
    this.addStartDateTv = addStartDateTv;
    this.addStartLayout = addStartLayout;
    this.addStartTimeBg = addStartTimeBg;
    this.addStartTimeTv = addStartTimeTv;
    this.addStartTimepickerTp = addStartTimepickerTp;
    this.addStartTv = addStartTv;
    this.addTitleEt = addTitleEt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_alarm_content_tv;
      TextView addAlarmContentTv = ViewBindings.findChildViewById(rootView, id);
      if (addAlarmContentTv == null) {
        break missingId;
      }

      id = R.id.add_alarm_iv;
      ImageView addAlarmIv = ViewBindings.findChildViewById(rootView, id);
      if (addAlarmIv == null) {
        break missingId;
      }

      id = R.id.add_alarm_layout;
      ConstraintLayout addAlarmLayout = ViewBindings.findChildViewById(rootView, id);
      if (addAlarmLayout == null) {
        break missingId;
      }

      id = R.id.add_alarm_tv;
      TextView addAlarmTv = ViewBindings.findChildViewById(rootView, id);
      if (addAlarmTv == null) {
        break missingId;
      }

      id = R.id.add_category_content_color_cv;
      CardView addCategoryContentColorCv = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryContentColorCv == null) {
        break missingId;
      }

      id = R.id.add_category_content_layout;
      LinearLayout addCategoryContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryContentLayout == null) {
        break missingId;
      }

      id = R.id.add_category_content_name_tv;
      TextView addCategoryContentNameTv = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryContentNameTv == null) {
        break missingId;
      }

      id = R.id.add_category_iv;
      ImageView addCategoryIv = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryIv == null) {
        break missingId;
      }

      id = R.id.add_category_layout;
      ConstraintLayout addCategoryLayout = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryLayout == null) {
        break missingId;
      }

      id = R.id.add_category_tv;
      TextView addCategoryTv = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryTv == null) {
        break missingId;
      }

      id = R.id.add_choose_linear_layout;
      LinearLayout addChooseLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (addChooseLinearLayout == null) {
        break missingId;
      }

      id = R.id.add_close_tv;
      TextView addCloseTv = ViewBindings.findChildViewById(rootView, id);
      if (addCloseTv == null) {
        break missingId;
      }

      id = R.id.add_datepicker_dp;
      DatePicker addDatepickerDp = ViewBindings.findChildViewById(rootView, id);
      if (addDatepickerDp == null) {
        break missingId;
      }

      id = R.id.add_end_bar_view;
      View addEndBarView = ViewBindings.findChildViewById(rootView, id);
      if (addEndBarView == null) {
        break missingId;
      }

      id = R.id.add_end_date_bg;
      ImageView addEndDateBg = ViewBindings.findChildViewById(rootView, id);
      if (addEndDateBg == null) {
        break missingId;
      }

      id = R.id.add_end_date_tv;
      TextView addEndDateTv = ViewBindings.findChildViewById(rootView, id);
      if (addEndDateTv == null) {
        break missingId;
      }

      id = R.id.add_end_layout;
      ConstraintLayout addEndLayout = ViewBindings.findChildViewById(rootView, id);
      if (addEndLayout == null) {
        break missingId;
      }

      id = R.id.add_end_time_bg;
      ImageView addEndTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (addEndTimeBg == null) {
        break missingId;
      }

      id = R.id.add_end_time_tv;
      TextView addEndTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (addEndTimeTv == null) {
        break missingId;
      }

      id = R.id.add_end_timepicker_tp;
      TimePicker addEndTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (addEndTimepickerTp == null) {
        break missingId;
      }

      id = R.id.add_end_tv;
      TextView addEndTv = ViewBindings.findChildViewById(rootView, id);
      if (addEndTv == null) {
        break missingId;
      }

      id = R.id.add_map_open_kakaomap_btn;
      Button addMapOpenKakaomapBtn = ViewBindings.findChildViewById(rootView, id);
      if (addMapOpenKakaomapBtn == null) {
        break missingId;
      }

      id = R.id.add_map_view;
      RelativeLayout addMapView = ViewBindings.findChildViewById(rootView, id);
      if (addMapView == null) {
        break missingId;
      }

      id = R.id.add_new_tv;
      TextView addNewTv = ViewBindings.findChildViewById(rootView, id);
      if (addNewTv == null) {
        break missingId;
      }

      id = R.id.add_place_content_tv;
      TextView addPlaceContentTv = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceContentTv == null) {
        break missingId;
      }

      id = R.id.add_place_iv;
      ImageView addPlaceIv = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceIv == null) {
        break missingId;
      }

      id = R.id.add_place_layout;
      ConstraintLayout addPlaceLayout = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceLayout == null) {
        break missingId;
      }

      id = R.id.add_place_tv;
      TextView addPlaceTv = ViewBindings.findChildViewById(rootView, id);
      if (addPlaceTv == null) {
        break missingId;
      }

      id = R.id.add_save_tv;
      TextView addSaveTv = ViewBindings.findChildViewById(rootView, id);
      if (addSaveTv == null) {
        break missingId;
      }

      id = R.id.add_start_bar_view;
      View addStartBarView = ViewBindings.findChildViewById(rootView, id);
      if (addStartBarView == null) {
        break missingId;
      }

      id = R.id.add_start_date_bg;
      ImageView addStartDateBg = ViewBindings.findChildViewById(rootView, id);
      if (addStartDateBg == null) {
        break missingId;
      }

      id = R.id.add_start_date_tv;
      TextView addStartDateTv = ViewBindings.findChildViewById(rootView, id);
      if (addStartDateTv == null) {
        break missingId;
      }

      id = R.id.add_start_layout;
      ConstraintLayout addStartLayout = ViewBindings.findChildViewById(rootView, id);
      if (addStartLayout == null) {
        break missingId;
      }

      id = R.id.add_start_time_bg;
      ImageView addStartTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (addStartTimeBg == null) {
        break missingId;
      }

      id = R.id.add_start_time_tv;
      TextView addStartTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (addStartTimeTv == null) {
        break missingId;
      }

      id = R.id.add_start_timepicker_tp;
      TimePicker addStartTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (addStartTimepickerTp == null) {
        break missingId;
      }

      id = R.id.add_start_tv;
      TextView addStartTv = ViewBindings.findChildViewById(rootView, id);
      if (addStartTv == null) {
        break missingId;
      }

      id = R.id.add_title_et;
      EditText addTitleEt = ViewBindings.findChildViewById(rootView, id);
      if (addTitleEt == null) {
        break missingId;
      }

      return new FragmentNewScheduleBinding((ConstraintLayout) rootView, addAlarmContentTv,
          addAlarmIv, addAlarmLayout, addAlarmTv, addCategoryContentColorCv,
          addCategoryContentLayout, addCategoryContentNameTv, addCategoryIv, addCategoryLayout,
          addCategoryTv, addChooseLinearLayout, addCloseTv, addDatepickerDp, addEndBarView,
          addEndDateBg, addEndDateTv, addEndLayout, addEndTimeBg, addEndTimeTv, addEndTimepickerTp,
          addEndTv, addMapOpenKakaomapBtn, addMapView, addNewTv, addPlaceContentTv, addPlaceIv,
          addPlaceLayout, addPlaceTv, addSaveTv, addStartBarView, addStartDateBg, addStartDateTv,
          addStartLayout, addStartTimeBg, addStartTimeTv, addStartTimepickerTp, addStartTv,
          addTitleEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

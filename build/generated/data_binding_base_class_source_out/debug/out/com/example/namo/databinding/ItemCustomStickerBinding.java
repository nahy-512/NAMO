// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCustomStickerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView itemCustomStickerAuthorTv;

  @NonNull
  public final ImageView itemCustomStickerImgIv;

  @NonNull
  public final TextView itemCustomStickerNameTv;

  @NonNull
  public final TextView itemCustomStickerPriceTv;

  @NonNull
  public final LinearLayout itemCustomStickerRow1Col1;

  private ItemCustomStickerBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView itemCustomStickerAuthorTv, @NonNull ImageView itemCustomStickerImgIv,
      @NonNull TextView itemCustomStickerNameTv, @NonNull TextView itemCustomStickerPriceTv,
      @NonNull LinearLayout itemCustomStickerRow1Col1) {
    this.rootView = rootView;
    this.itemCustomStickerAuthorTv = itemCustomStickerAuthorTv;
    this.itemCustomStickerImgIv = itemCustomStickerImgIv;
    this.itemCustomStickerNameTv = itemCustomStickerNameTv;
    this.itemCustomStickerPriceTv = itemCustomStickerPriceTv;
    this.itemCustomStickerRow1Col1 = itemCustomStickerRow1Col1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCustomStickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCustomStickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_custom_sticker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCustomStickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_custom_sticker_author_tv;
      TextView itemCustomStickerAuthorTv = ViewBindings.findChildViewById(rootView, id);
      if (itemCustomStickerAuthorTv == null) {
        break missingId;
      }

      id = R.id.item_custom_sticker_img_iv;
      ImageView itemCustomStickerImgIv = ViewBindings.findChildViewById(rootView, id);
      if (itemCustomStickerImgIv == null) {
        break missingId;
      }

      id = R.id.item_custom_sticker_name_tv;
      TextView itemCustomStickerNameTv = ViewBindings.findChildViewById(rootView, id);
      if (itemCustomStickerNameTv == null) {
        break missingId;
      }

      id = R.id.item_custom_sticker_price_tv;
      TextView itemCustomStickerPriceTv = ViewBindings.findChildViewById(rootView, id);
      if (itemCustomStickerPriceTv == null) {
        break missingId;
      }

      id = R.id.item_custom_sticker_row1_col1;
      LinearLayout itemCustomStickerRow1Col1 = ViewBindings.findChildViewById(rootView, id);
      if (itemCustomStickerRow1Col1 == null) {
        break missingId;
      }

      return new ItemCustomStickerBinding((ConstraintLayout) rootView, itemCustomStickerAuthorTv,
          itemCustomStickerImgIv, itemCustomStickerNameTv, itemCustomStickerPriceTv,
          itemCustomStickerRow1Col1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

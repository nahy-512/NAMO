// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.namo.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTodoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TabLayout todoContentTb;

  @NonNull
  public final ViewPager2 todoContentVp;

  @NonNull
  public final TextView todoTitleTv;

  @NonNull
  public final LinearLayout todoTitlebar;

  private FragmentTodoBinding(@NonNull ConstraintLayout rootView, @NonNull TabLayout todoContentTb,
      @NonNull ViewPager2 todoContentVp, @NonNull TextView todoTitleTv,
      @NonNull LinearLayout todoTitlebar) {
    this.rootView = rootView;
    this.todoContentTb = todoContentTb;
    this.todoContentVp = todoContentVp;
    this.todoTitleTv = todoTitleTv;
    this.todoTitlebar = todoTitlebar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTodoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTodoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_todo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTodoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.todo_content_tb;
      TabLayout todoContentTb = ViewBindings.findChildViewById(rootView, id);
      if (todoContentTb == null) {
        break missingId;
      }

      id = R.id.todo_content_vp;
      ViewPager2 todoContentVp = ViewBindings.findChildViewById(rootView, id);
      if (todoContentVp == null) {
        break missingId;
      }

      id = R.id.todo_title_tv;
      TextView todoTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (todoTitleTv == null) {
        break missingId;
      }

      id = R.id.todo_titlebar;
      LinearLayout todoTitlebar = ViewBindings.findChildViewById(rootView, id);
      if (todoTitlebar == null) {
        break missingId;
      }

      return new FragmentTodoBinding((ConstraintLayout) rootView, todoContentTb, todoContentVp,
          todoTitleTv, todoTitlebar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

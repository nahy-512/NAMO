// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCategorySettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout categoryCalendarPaletteLl;

  @NonNull
  public final LinearLayout categoryCalendarPaletteSetting;

  @NonNull
  public final RecyclerView categoryCalendarRv;

  @NonNull
  public final TextView categoryCalendarTv;

  @NonNull
  public final LinearLayout categoryCatenderAddBtn;

  @NonNull
  public final TextView categoryCloseTv;

  @NonNull
  public final LinearLayout categoryDetailCalenderLl;

  @NonNull
  public final TextView categoryDetailNewTv;

  @NonNull
  public final TextView categoryDetailSaveTv;

  @NonNull
  public final ProgressBar categoryLoadingPb;

  private FragmentCategorySettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout categoryCalendarPaletteLl,
      @NonNull LinearLayout categoryCalendarPaletteSetting,
      @NonNull RecyclerView categoryCalendarRv, @NonNull TextView categoryCalendarTv,
      @NonNull LinearLayout categoryCatenderAddBtn, @NonNull TextView categoryCloseTv,
      @NonNull LinearLayout categoryDetailCalenderLl, @NonNull TextView categoryDetailNewTv,
      @NonNull TextView categoryDetailSaveTv, @NonNull ProgressBar categoryLoadingPb) {
    this.rootView = rootView;
    this.categoryCalendarPaletteLl = categoryCalendarPaletteLl;
    this.categoryCalendarPaletteSetting = categoryCalendarPaletteSetting;
    this.categoryCalendarRv = categoryCalendarRv;
    this.categoryCalendarTv = categoryCalendarTv;
    this.categoryCatenderAddBtn = categoryCatenderAddBtn;
    this.categoryCloseTv = categoryCloseTv;
    this.categoryDetailCalenderLl = categoryDetailCalenderLl;
    this.categoryDetailNewTv = categoryDetailNewTv;
    this.categoryDetailSaveTv = categoryDetailSaveTv;
    this.categoryLoadingPb = categoryLoadingPb;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCategorySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCategorySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_category_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCategorySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_calendar_palette_ll;
      LinearLayout categoryCalendarPaletteLl = ViewBindings.findChildViewById(rootView, id);
      if (categoryCalendarPaletteLl == null) {
        break missingId;
      }

      id = R.id.category_calendar_palette_setting;
      LinearLayout categoryCalendarPaletteSetting = ViewBindings.findChildViewById(rootView, id);
      if (categoryCalendarPaletteSetting == null) {
        break missingId;
      }

      id = R.id.category_calendar_rv;
      RecyclerView categoryCalendarRv = ViewBindings.findChildViewById(rootView, id);
      if (categoryCalendarRv == null) {
        break missingId;
      }

      id = R.id.category_calendar_tv;
      TextView categoryCalendarTv = ViewBindings.findChildViewById(rootView, id);
      if (categoryCalendarTv == null) {
        break missingId;
      }

      id = R.id.category_catender_add_btn;
      LinearLayout categoryCatenderAddBtn = ViewBindings.findChildViewById(rootView, id);
      if (categoryCatenderAddBtn == null) {
        break missingId;
      }

      id = R.id.category_close_tv;
      TextView categoryCloseTv = ViewBindings.findChildViewById(rootView, id);
      if (categoryCloseTv == null) {
        break missingId;
      }

      id = R.id.category_detail_calender_ll;
      LinearLayout categoryDetailCalenderLl = ViewBindings.findChildViewById(rootView, id);
      if (categoryDetailCalenderLl == null) {
        break missingId;
      }

      id = R.id.category_detail_new_tv;
      TextView categoryDetailNewTv = ViewBindings.findChildViewById(rootView, id);
      if (categoryDetailNewTv == null) {
        break missingId;
      }

      id = R.id.category_detail_save_tv;
      TextView categoryDetailSaveTv = ViewBindings.findChildViewById(rootView, id);
      if (categoryDetailSaveTv == null) {
        break missingId;
      }

      id = R.id.category_loading_pb;
      ProgressBar categoryLoadingPb = ViewBindings.findChildViewById(rootView, id);
      if (categoryLoadingPb == null) {
        break missingId;
      }

      return new FragmentCategorySettingBinding((ConstraintLayout) rootView,
          categoryCalendarPaletteLl, categoryCalendarPaletteSetting, categoryCalendarRv,
          categoryCalendarTv, categoryCatenderAddBtn, categoryCloseTv, categoryDetailCalenderLl,
          categoryDetailNewTv, categoryDetailSaveTv, categoryLoadingPb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditScheduleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView editAlarmContentTv;

  @NonNull
  public final ImageView editAlarmIv;

  @NonNull
  public final ConstraintLayout editAlarmLayout;

  @NonNull
  public final TextView editAlarmTv;

  @NonNull
  public final CardView editCategoryContentColorCv;

  @NonNull
  public final LinearLayout editCategoryContentLayout;

  @NonNull
  public final TextView editCategoryContentNameTv;

  @NonNull
  public final ImageView editCategoryIv;

  @NonNull
  public final ConstraintLayout editCategoryLayout;

  @NonNull
  public final TextView editCategoryTv;

  @NonNull
  public final LinearLayout editChooseLinearLayout;

  @NonNull
  public final TextView editCloseTv;

  @NonNull
  public final DatePicker editDatepickerDp;

  @NonNull
  public final View editEndBarView;

  @NonNull
  public final ImageView editEndDateBg;

  @NonNull
  public final TextView editEndDateTv;

  @NonNull
  public final ConstraintLayout editEndLayout;

  @NonNull
  public final ImageView editEndTimeBg;

  @NonNull
  public final TextView editEndTimeTv;

  @NonNull
  public final TimePicker editEndTimepickerTp;

  @NonNull
  public final TextView editEndTv;

  @NonNull
  public final Button editMapOpenKakaomapBtn;

  @NonNull
  public final RelativeLayout editMapView;

  @NonNull
  public final TextView editNewTv;

  @NonNull
  public final TextView editPlaceContentTv;

  @NonNull
  public final ImageView editPlaceIv;

  @NonNull
  public final ConstraintLayout editPlaceLayout;

  @NonNull
  public final TextView editPlaceTv;

  @NonNull
  public final TextView editSaveTv;

  @NonNull
  public final View editStartBarView;

  @NonNull
  public final ImageView editStartDateBg;

  @NonNull
  public final TextView editStartDateTv;

  @NonNull
  public final ConstraintLayout editStartLayout;

  @NonNull
  public final ImageView editStartTimeBg;

  @NonNull
  public final TextView editStartTimeTv;

  @NonNull
  public final TimePicker editStartTimepickerTp;

  @NonNull
  public final TextView editStartTv;

  @NonNull
  public final EditText editTitleEt;

  private FragmentEditScheduleBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView editAlarmContentTv, @NonNull ImageView editAlarmIv,
      @NonNull ConstraintLayout editAlarmLayout, @NonNull TextView editAlarmTv,
      @NonNull CardView editCategoryContentColorCv, @NonNull LinearLayout editCategoryContentLayout,
      @NonNull TextView editCategoryContentNameTv, @NonNull ImageView editCategoryIv,
      @NonNull ConstraintLayout editCategoryLayout, @NonNull TextView editCategoryTv,
      @NonNull LinearLayout editChooseLinearLayout, @NonNull TextView editCloseTv,
      @NonNull DatePicker editDatepickerDp, @NonNull View editEndBarView,
      @NonNull ImageView editEndDateBg, @NonNull TextView editEndDateTv,
      @NonNull ConstraintLayout editEndLayout, @NonNull ImageView editEndTimeBg,
      @NonNull TextView editEndTimeTv, @NonNull TimePicker editEndTimepickerTp,
      @NonNull TextView editEndTv, @NonNull Button editMapOpenKakaomapBtn,
      @NonNull RelativeLayout editMapView, @NonNull TextView editNewTv,
      @NonNull TextView editPlaceContentTv, @NonNull ImageView editPlaceIv,
      @NonNull ConstraintLayout editPlaceLayout, @NonNull TextView editPlaceTv,
      @NonNull TextView editSaveTv, @NonNull View editStartBarView,
      @NonNull ImageView editStartDateBg, @NonNull TextView editStartDateTv,
      @NonNull ConstraintLayout editStartLayout, @NonNull ImageView editStartTimeBg,
      @NonNull TextView editStartTimeTv, @NonNull TimePicker editStartTimepickerTp,
      @NonNull TextView editStartTv, @NonNull EditText editTitleEt) {
    this.rootView = rootView;
    this.editAlarmContentTv = editAlarmContentTv;
    this.editAlarmIv = editAlarmIv;
    this.editAlarmLayout = editAlarmLayout;
    this.editAlarmTv = editAlarmTv;
    this.editCategoryContentColorCv = editCategoryContentColorCv;
    this.editCategoryContentLayout = editCategoryContentLayout;
    this.editCategoryContentNameTv = editCategoryContentNameTv;
    this.editCategoryIv = editCategoryIv;
    this.editCategoryLayout = editCategoryLayout;
    this.editCategoryTv = editCategoryTv;
    this.editChooseLinearLayout = editChooseLinearLayout;
    this.editCloseTv = editCloseTv;
    this.editDatepickerDp = editDatepickerDp;
    this.editEndBarView = editEndBarView;
    this.editEndDateBg = editEndDateBg;
    this.editEndDateTv = editEndDateTv;
    this.editEndLayout = editEndLayout;
    this.editEndTimeBg = editEndTimeBg;
    this.editEndTimeTv = editEndTimeTv;
    this.editEndTimepickerTp = editEndTimepickerTp;
    this.editEndTv = editEndTv;
    this.editMapOpenKakaomapBtn = editMapOpenKakaomapBtn;
    this.editMapView = editMapView;
    this.editNewTv = editNewTv;
    this.editPlaceContentTv = editPlaceContentTv;
    this.editPlaceIv = editPlaceIv;
    this.editPlaceLayout = editPlaceLayout;
    this.editPlaceTv = editPlaceTv;
    this.editSaveTv = editSaveTv;
    this.editStartBarView = editStartBarView;
    this.editStartDateBg = editStartDateBg;
    this.editStartDateTv = editStartDateTv;
    this.editStartLayout = editStartLayout;
    this.editStartTimeBg = editStartTimeBg;
    this.editStartTimeTv = editStartTimeTv;
    this.editStartTimepickerTp = editStartTimepickerTp;
    this.editStartTv = editStartTv;
    this.editTitleEt = editTitleEt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_alarm_content_tv;
      TextView editAlarmContentTv = ViewBindings.findChildViewById(rootView, id);
      if (editAlarmContentTv == null) {
        break missingId;
      }

      id = R.id.edit_alarm_iv;
      ImageView editAlarmIv = ViewBindings.findChildViewById(rootView, id);
      if (editAlarmIv == null) {
        break missingId;
      }

      id = R.id.edit_alarm_layout;
      ConstraintLayout editAlarmLayout = ViewBindings.findChildViewById(rootView, id);
      if (editAlarmLayout == null) {
        break missingId;
      }

      id = R.id.edit_alarm_tv;
      TextView editAlarmTv = ViewBindings.findChildViewById(rootView, id);
      if (editAlarmTv == null) {
        break missingId;
      }

      id = R.id.edit_category_content_color_cv;
      CardView editCategoryContentColorCv = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryContentColorCv == null) {
        break missingId;
      }

      id = R.id.edit_category_content_layout;
      LinearLayout editCategoryContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryContentLayout == null) {
        break missingId;
      }

      id = R.id.edit_category_content_name_tv;
      TextView editCategoryContentNameTv = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryContentNameTv == null) {
        break missingId;
      }

      id = R.id.edit_category_iv;
      ImageView editCategoryIv = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryIv == null) {
        break missingId;
      }

      id = R.id.edit_category_layout;
      ConstraintLayout editCategoryLayout = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryLayout == null) {
        break missingId;
      }

      id = R.id.edit_category_tv;
      TextView editCategoryTv = ViewBindings.findChildViewById(rootView, id);
      if (editCategoryTv == null) {
        break missingId;
      }

      id = R.id.edit_choose_linear_layout;
      LinearLayout editChooseLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (editChooseLinearLayout == null) {
        break missingId;
      }

      id = R.id.edit_close_tv;
      TextView editCloseTv = ViewBindings.findChildViewById(rootView, id);
      if (editCloseTv == null) {
        break missingId;
      }

      id = R.id.edit_datepicker_dp;
      DatePicker editDatepickerDp = ViewBindings.findChildViewById(rootView, id);
      if (editDatepickerDp == null) {
        break missingId;
      }

      id = R.id.edit_end_bar_view;
      View editEndBarView = ViewBindings.findChildViewById(rootView, id);
      if (editEndBarView == null) {
        break missingId;
      }

      id = R.id.edit_end_date_bg;
      ImageView editEndDateBg = ViewBindings.findChildViewById(rootView, id);
      if (editEndDateBg == null) {
        break missingId;
      }

      id = R.id.edit_end_date_tv;
      TextView editEndDateTv = ViewBindings.findChildViewById(rootView, id);
      if (editEndDateTv == null) {
        break missingId;
      }

      id = R.id.edit_end_layout;
      ConstraintLayout editEndLayout = ViewBindings.findChildViewById(rootView, id);
      if (editEndLayout == null) {
        break missingId;
      }

      id = R.id.edit_end_time_bg;
      ImageView editEndTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (editEndTimeBg == null) {
        break missingId;
      }

      id = R.id.edit_end_time_tv;
      TextView editEndTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (editEndTimeTv == null) {
        break missingId;
      }

      id = R.id.edit_end_timepicker_tp;
      TimePicker editEndTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (editEndTimepickerTp == null) {
        break missingId;
      }

      id = R.id.edit_end_tv;
      TextView editEndTv = ViewBindings.findChildViewById(rootView, id);
      if (editEndTv == null) {
        break missingId;
      }

      id = R.id.edit_map_open_kakaomap_btn;
      Button editMapOpenKakaomapBtn = ViewBindings.findChildViewById(rootView, id);
      if (editMapOpenKakaomapBtn == null) {
        break missingId;
      }

      id = R.id.edit_map_view;
      RelativeLayout editMapView = ViewBindings.findChildViewById(rootView, id);
      if (editMapView == null) {
        break missingId;
      }

      id = R.id.edit_new_tv;
      TextView editNewTv = ViewBindings.findChildViewById(rootView, id);
      if (editNewTv == null) {
        break missingId;
      }

      id = R.id.edit_place_content_tv;
      TextView editPlaceContentTv = ViewBindings.findChildViewById(rootView, id);
      if (editPlaceContentTv == null) {
        break missingId;
      }

      id = R.id.edit_place_iv;
      ImageView editPlaceIv = ViewBindings.findChildViewById(rootView, id);
      if (editPlaceIv == null) {
        break missingId;
      }

      id = R.id.edit_place_layout;
      ConstraintLayout editPlaceLayout = ViewBindings.findChildViewById(rootView, id);
      if (editPlaceLayout == null) {
        break missingId;
      }

      id = R.id.edit_place_tv;
      TextView editPlaceTv = ViewBindings.findChildViewById(rootView, id);
      if (editPlaceTv == null) {
        break missingId;
      }

      id = R.id.edit_save_tv;
      TextView editSaveTv = ViewBindings.findChildViewById(rootView, id);
      if (editSaveTv == null) {
        break missingId;
      }

      id = R.id.edit_start_bar_view;
      View editStartBarView = ViewBindings.findChildViewById(rootView, id);
      if (editStartBarView == null) {
        break missingId;
      }

      id = R.id.edit_start_date_bg;
      ImageView editStartDateBg = ViewBindings.findChildViewById(rootView, id);
      if (editStartDateBg == null) {
        break missingId;
      }

      id = R.id.edit_start_date_tv;
      TextView editStartDateTv = ViewBindings.findChildViewById(rootView, id);
      if (editStartDateTv == null) {
        break missingId;
      }

      id = R.id.edit_start_layout;
      ConstraintLayout editStartLayout = ViewBindings.findChildViewById(rootView, id);
      if (editStartLayout == null) {
        break missingId;
      }

      id = R.id.edit_start_time_bg;
      ImageView editStartTimeBg = ViewBindings.findChildViewById(rootView, id);
      if (editStartTimeBg == null) {
        break missingId;
      }

      id = R.id.edit_start_time_tv;
      TextView editStartTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (editStartTimeTv == null) {
        break missingId;
      }

      id = R.id.edit_start_timepicker_tp;
      TimePicker editStartTimepickerTp = ViewBindings.findChildViewById(rootView, id);
      if (editStartTimepickerTp == null) {
        break missingId;
      }

      id = R.id.edit_start_tv;
      TextView editStartTv = ViewBindings.findChildViewById(rootView, id);
      if (editStartTv == null) {
        break missingId;
      }

      id = R.id.edit_title_et;
      EditText editTitleEt = ViewBindings.findChildViewById(rootView, id);
      if (editTitleEt == null) {
        break missingId;
      }

      return new FragmentEditScheduleBinding((ConstraintLayout) rootView, editAlarmContentTv,
          editAlarmIv, editAlarmLayout, editAlarmTv, editCategoryContentColorCv,
          editCategoryContentLayout, editCategoryContentNameTv, editCategoryIv, editCategoryLayout,
          editCategoryTv, editChooseLinearLayout, editCloseTv, editDatepickerDp, editEndBarView,
          editEndDateBg, editEndDateTv, editEndLayout, editEndTimeBg, editEndTimeTv,
          editEndTimepickerTp, editEndTv, editMapOpenKakaomapBtn, editMapView, editNewTv,
          editPlaceContentTv, editPlaceIv, editPlaceLayout, editPlaceTv, editSaveTv,
          editStartBarView, editStartDateBg, editStartDateTv, editStartLayout, editStartTimeBg,
          editStartTimeTv, editStartTimepickerTp, editStartTv, editTitleEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

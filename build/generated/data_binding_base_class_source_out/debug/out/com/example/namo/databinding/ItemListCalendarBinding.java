// Generated by view binder compiler. Do not edit!
package com.example.namo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.namo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListCalendarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itemCalendarDateText;

  @NonNull
  public final TextView itemCalendarEvent1;

  @NonNull
  public final TextView itemCalendarEvent2;

  @NonNull
  public final TextView itemCalendarEvent3;

  @NonNull
  public final TextView itemCalendarEventCount;

  private ItemListCalendarBinding(@NonNull LinearLayout rootView,
      @NonNull TextView itemCalendarDateText, @NonNull TextView itemCalendarEvent1,
      @NonNull TextView itemCalendarEvent2, @NonNull TextView itemCalendarEvent3,
      @NonNull TextView itemCalendarEventCount) {
    this.rootView = rootView;
    this.itemCalendarDateText = itemCalendarDateText;
    this.itemCalendarEvent1 = itemCalendarEvent1;
    this.itemCalendarEvent2 = itemCalendarEvent2;
    this.itemCalendarEvent3 = itemCalendarEvent3;
    this.itemCalendarEventCount = itemCalendarEventCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_calendar_date_text;
      TextView itemCalendarDateText = ViewBindings.findChildViewById(rootView, id);
      if (itemCalendarDateText == null) {
        break missingId;
      }

      id = R.id.item_calendar_event1;
      TextView itemCalendarEvent1 = ViewBindings.findChildViewById(rootView, id);
      if (itemCalendarEvent1 == null) {
        break missingId;
      }

      id = R.id.item_calendar_event2;
      TextView itemCalendarEvent2 = ViewBindings.findChildViewById(rootView, id);
      if (itemCalendarEvent2 == null) {
        break missingId;
      }

      id = R.id.item_calendar_event3;
      TextView itemCalendarEvent3 = ViewBindings.findChildViewById(rootView, id);
      if (itemCalendarEvent3 == null) {
        break missingId;
      }

      id = R.id.item_calendar_event_count;
      TextView itemCalendarEventCount = ViewBindings.findChildViewById(rootView, id);
      if (itemCalendarEventCount == null) {
        break missingId;
      }

      return new ItemListCalendarBinding((LinearLayout) rootView, itemCalendarDateText,
          itemCalendarEvent1, itemCalendarEvent2, itemCalendarEvent3, itemCalendarEventCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
